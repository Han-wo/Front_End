name: Preview

on:
  pull_request:
    branches: ["main", "develop"]

permissions:
  contents: write
  pages: write
  deployments: write
  id-token: write
  issues: write
  pull-requests: write

jobs:
  storybook-preview:
    runs-on: ubuntu-20.04
    steps:
      - name: 저장소 체크아웃
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Node.js 설정
        uses: actions/setup-node@v3
        with:
          node-version: "20" # 프로젝트의 Node.js 버전에 맞게 조정하세요
          cache: "yarn"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: 캐시 종속성
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: 종속성 설치
        run: yarn install --frozen-lockfile --prefer-offline
        if: steps.yarn-cache.outputs.cache-hit != 'true'

      - name: Chromatic에 게시
        id: chromatic
        uses: chromaui/action@v1
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          token: ${{ secrets.GITHUB_TOKEN }}
          onlyChanged: true
          autoAcceptChanges: true
          exitZeroOnChanges: true

      - name: PR 코멘트 남기기
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const now = new Date().toLocaleString('ko-KR', {timeZone: 'Asia/Seoul'});
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `💄 Storybook: ${process.env.STORYBOOK_URL}\n🕖 Update: ${now}`
            })
        env:
          STORYBOOK_URL: ${{ steps.chromatic.outputs.storybookUrl }}
